<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>搭建博客时的感想与见闻 on Random Blog</title>
    <link>http://hugo.mergo.online/</link>
    <description>Recent content in 搭建博客时的感想与见闻 on Random Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 Feb 2023 22:17:00 +0000</lastBuildDate><atom:link href="http://hugo.mergo.online/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>购买 Kindle 后的一些记录</title>
      <link>http://hugo.mergo.online/posts/kindle/</link>
      <pubDate>Fri, 03 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>http://hugo.mergo.online/posts/kindle/</guid>
      <description>去年黑五花 180 镑购入了 Kindle Oasis 3。我平时读书并不太多，算是冲动消费了。不过既然已经花了钱，还是打算好好用一下再说。
阅读 PDF 的体验只能用非常糟糕来形容：向前翻页时延迟相当明显，向后翻页则需等待五到十秒。缩放非常不便，也不能使用连续滚动。当然这情有可原，毕竟 PDF 本来就不是 Kindle 的专项。很好奇国产阵营的阅读器会不会拥有更好的支持。
正版电子书实在太过昂贵，不得已只能手动导入文件。可惜常用的 EPUB 格式不支持增强排版，因此缺失断字、连字和靠左对齐等功能，也不能加载电子书自带的字体，无法正常阅读。好在可以使用 Calibre 的 KFX Output 插件将文件转换成支持上述特性的 KFX 格式，然后有线导入。导入时似乎必须通过 Calibre 并手动选择格式，否则要么封面无法显示，要么仍不支持上述功能。
虽说 Oasis 被认为是续航较差的型号，但满足我的需求已绰绰有余；大概是因为眼睛不怎么敏感，又戴着防蓝光眼镜，网上说的阴阳屏我也没有发觉。唯一美中不足是如今实在显得有些落后的 Micro USB，不过既然是和鼠标一样的接口，至少没有多出一根线来。也有点想念 Voyage 的压感式翻页按钮，那恰到好处的振动反馈真是无与伦比的美好体验。
话说我初中时曾偷偷拿家里的 Kindle 上网。记得浏览器的键盘反应极慢，打个长点的网址要花上一两分钟；贴吧界面是所谓的「极速版」，也就是最古老的界面，读者如果感兴趣可以去 Wayback Machine 看一看。如今回忆起来，实在是很佩服自己当年的毅力。</description>
    </item>
    
    <item>
      <title>关于字体排版的一些杂念</title>
      <link>http://hugo.mergo.online/posts/type_rant/</link>
      <pubDate>Fri, 03 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>http://hugo.mergo.online/posts/type_rant/</guid>
      <description>一段时间前我对字体排印产生了兴趣。阴差阳错，更吸引我的不是作为母语的中文排版，而是理应更加陌生的西文排版。在我看来，水平比例、升降部和连字等西文独有的特征赋予这数百个字母（及其注音变体）的万千变化，并不逊色于汉字繁复的间架结构系统。
自然而然地，我也希望能将所学的知识——不论多么浅薄——在日常中应用起来。只可惜现实往往不尽人意，以中文为主的个人博客与西文排版习惯格格不入，平时使用的 Office 套装对字体特性的支持则无限接近于零。最终我只能转而折腾 InDesign 和 LaTeX，然而这已和原本的初心相去甚远了。
兰道尔·门罗曾说，如果你恨某人，就教他辨认出错的字偶间距（他本人对于字体排印似乎不甚热衷）。对于初学者，字体排印仿佛照妖镜，无法创造美，只能映出丑。接触这个领域之前我看到的是一行行文字，此后看到的却是 Arial 和 Calibri，Comic Sans 和 Verdana。我对时下流行的几何无衬线体产生了不必要的仇恨，却又找不出合适的替代品；过度痴迷于各式奇技淫巧，自己的水平又不足以在常用的排版软件中将其实现，真可谓是邯郸学步之典范。
获取知识后难以抑制的表达欲更是令我自言自语的习惯急剧恶化，一人独处时经常发现自己正面对不存在的观众背诵已经重复无数遍的关于某个字体，某位设计师或某些知识点的讲稿。有时空口，有时则就着早已准备好，且经过无数次修改的幻灯片。读到这里的您大概不难猜到，这篇文章同样也是表达欲过剩的产物，草稿早就在我脑子里打过许多回了。
要说它有没有给我带来快乐和慰藉，其实也是有的。长期浸淫于各大字厂官网的结果就是，日常所见绝大部分文章、广告牌或软件所使用的字体，我都能一眼认出。走在路上，心里默念「这是 Myriad，这是 Sabon Next」竟使我获得了相当的满足感。然而这种技能并不能给我带来学分或工资，作为社交润滑剂也是太过荒唐。我不止一次幻想过与某位好友就着路边见到的某个标牌侃侃而谈，随后猛然想起自己的社交圈实在过于狭小，根本容不下这样一位良友。
写完了，我想不出结尾了，对不起。</description>
    </item>
    
    <item>
      <title>搭建博客时的感想与见闻</title>
      <link>http://hugo.mergo.online/posts/blog/</link>
      <pubDate>Sun, 26 Feb 2023 22:17:00 +0000</pubDate>
      
      <guid>http://hugo.mergo.online/posts/blog/</guid>
      <description>我尝试搭博客已经很多次了。第一次因为布局太复杂，很快就选择放弃。第二次因为懒得手敲 HTML，又不知道如何自动生成文章，同样没能坚持下去。第三次尝试就是本站前身，因为不想使用第三方方案，所以凭着极度薄弱的 Python 基础硬写出来的 HTML 生成器。最终因为手动生成过于麻烦，转到了目前使用的 Hugo。
之所以一直抗拒诸如 Hugo 和 WordPress 的静态框架，还是因为目前已有的模板不合口味。这个观点似乎有些偏执，但我认为评论区和时间轴等功能对个人博客来说完全多余，动画效果也应尽量减少，完全没有也无不可。我找了许多中文博客作为参考，其中绝大多数早已停止更新，文章总数即使加上「Hello, world」也只停留在个位数。与之相对的是极尽花哨之能事的主题模板：光标和点击要有动画，能加的地方都加上进度条，能塞的地方都塞上二次元图片。而这些模板又对可读性不屑一顾，底色和正文颜色往往相差无几，字体回落经常一团乱，排版更是不忍直视。
比起动手解决问题，我向来更喜欢抱怨。但难以抑制的分享欲和过多可以浪费的时间最终还是让我选择自己搭建主题。要使用网页排版达到心仪的效果几乎完全不可能，从未接触过的 Go 语言更是难上加难；碍于能力所限和个人偏好，最终产物不过是最简单的框架而已。Stack Overflow 和 Hugo 社区可以提供绝大多数问题的解决方案，不过也是由于这种缺啥补啥的思路，整个过程下来，我对 Go 仍然一无所知。
正如上一篇文章所说，我很希望能把业余时间学到的排版知识应用起来，奈何编程知识实在匮乏，只能使用最笨的方法实现。最终成品虽然基本可以解决问题，但代码脏得不忍直视，可维护性也约等于零。
模板完成之后，剩下的就是写文章。动画评论、同人文、没什么技术含量的技术分享，个人博客常见的内容我在私下里都写过一些。但这些都是写给自己看的东西，要放在公众平台上还是有些羞耻。日常生活里也会拍些照片，或收集有趣的图片和文章，但要么太过零散，要么令人不知所云，都不适合放在博客里。这么一想，连花里胡哨都没做到的本站，好像连前文里被我贬得一文不值的普通博客都不如了。</description>
    </item>
    
    <item>
      <title>削足适履，以及其他</title>
      <link>http://hugo.mergo.online/posts/cut_off_nose/</link>
      <pubDate>Sat, 22 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>http://hugo.mergo.online/posts/cut_off_nose/</guid>
      <description>文段的长度永远是未知的：字母和标点的宽度千变万化，书写者根本无法掌控。然而无情的书页却定死了文本区块的长宽。单页两边对齐、对开页每行对齐且行数相同，这毫无疑问是最美观的排版方式。但要把千变万化的文段塞进这方方正正的框架，就好比手头上只有一种大小的棺材，却要应对高矮胖瘦参差不齐的死人。
如今的排版引擎无需干预就可以较好地控制断行和词距。可惜，它的智能还远未达到理想的程度。如何把页数控制为印张大小的整数倍，同时不添加过多空白页？如何避免孤行和寡行，且保证文本区块高度不变？连续多行出现的断字又如何？目前看来，这些问题只能留给人类解决。运气好的情况下，或许只需手动调整某几行的词距，或者断字的位置。条件允许的话，还可以稍微调整单词内字母的间距，甚至字符本身的宽度。这种做法或许会为激进的原教旨主义者所不齿，但事实证明迟钝的人脑和人眼根本无法洞察如此微妙的变化。我们或许可以将这些方法类比成对脚和鞋子都无甚影响的鞋拔子。
如果这样还无法解决问题呢？那么就轮到两个最显而易见的办法：放任瑕疵不管，或者修改文段本身的内容。绝大多数人不会在意前者，但细心的读者和负责排版的设计师本人或许会因此痛苦不已。后者几乎总能解决排版的疑难杂症，却相当考验作者的胸怀。在我看来，只要形式是作为书本内容的一部分出现⸺比如，对于讲解书籍装订和字体排印的读本⸺形式就与文本内容同等重要，因此削足适履有其必要性。反之，如果文本内容是唯一的侧重点，那对它进行任何修改都是不合适的。
上述一切的良苦用心，都是为了给读者呈现完美的文本布局。但网页排版又面临着完全不同的新问题。本文的第一段在我的浏览器中刚好可以撑满三行，一字不多，一字不少。我在写文章的时候，时不时也会下意识地修改句子结构，避免在行首出现单字。但我无从得知这篇文章会在怎样的媒介上被显示出来，只需最微小的一点变化⸺屏幕分辨率，或者窗口大小⸺这样的设计就会被破坏殆尽。如果读者您正好在用小屏手机浏览本站，可能还会发现抬头的高度是两行而非一行，而中英文混排的文段断行和断字乱七八糟。于是，削足适履也就无从谈起：它的前提，这个横平竖直，长宽固定，理想中的「履」，已经不复存在了，而为好好穿上它所做的一切牺牲也都毫无意义。
因此，在网页上追求完美的排版根本就是痴人说梦。所谓的响应式布局也不过是把「不忍直视」提升到「勉强能看」的程度，永远也无法媲美拥有固定而合理的纸张和文本区块大小，能从每个词、甚至每个字符上压榨最后一分优化可能性的桌面排版。</description>
    </item>
    
    <item>
      <title>中西文混排间隙迷思</title>
      <link>http://hugo.mergo.online/posts/spacing/</link>
      <pubDate>Mon, 08 May 2023 00:00:00 +0000</pubDate>
      
      <guid>http://hugo.mergo.online/posts/spacing/</guid>
      <description>本文不考虑竖排的情况，也没有讨论假名和谚文。我主张尽量使用术语既有的译名，而避免使用英文，为了避免歧义，下为文中出现术语的中英对应表。
English 中文 Saccade 眼跳 Colour 灰度 Counter 字怀 Side bearing 字距 Ascender 升部 Descender 降部 x-height x 字高 Baseline 基线 汉字和宽度是固定的，排列是连续的。在注视/眼跳的过程中，读者会首先将注视点附近的汉字识别和切分成词语，以词语作为单位进行阅读。由于空格的存在，这个过程对于西文没有必要。拉丁字母和汉字之间的各种区别可以代替空格，作为词与词之间的间隔。如果只是为了使拉丁字母单词和汉字更容易区分，那么人为添加空隙其实完全多余。
比起笔画，字怀的形状和大小是拉丁字母更加重要的特征。平衡字怀和字距的宽度，从而排出灰度均匀的文段，是设计拉丁正文字体时重要的考虑之一。但字怀对于汉字不占有同等的重要性。汉字的笔画数量差距极大，如「囊襄表衣」或「圖圄固回口」这样结构类似的汉字。即使有对笔画粗细和长度做出细微调整，或略微缩放字面框，仍无法平衡文段整体的灰度。这又否决了为平衡灰度作为添加间隙理由的可能性。
书写汉字时，一般会从靠近字面框最左或最上的笔画起笔，在右下收笔。多数汉字的高度占到整个字框的大半或全部，且垂直方向灰度分布比较均匀。大写拉丁字母与其类似，但没有字面框的概念，灰度同样不集中在某个高度。但小写拉丁字母的情况则全然不同。小写字母的起点则在 x 字高附近，笔画主要集中在基线和 x 字高之间，而升降部则作为偶尔出现的延伸，且其结构简单，笔画稀疏。只考虑正文的情况下，大写字母的出现频率远远小于小写字母，因此对于西文来说，x 字高与基线之间的部分是绝对的主体。汉字字体的西文部分会在其既有字体基础上略微扩大字符，在一定程度上也是出于「抬高」x 字高的考量。
汉字和拉丁字母最大的差异就在于此：前者基于字框顶部和底部减去高度，后者基于 x 字高和基线增加高度。我认为，在两者之间添加间隙最主要的原因，就是为了在两种垂直灰度分布迥然不同的书写系统之间提供缓冲空间，减少来回切换带来的冲击；并非是为了提升阅读速度，而是为了改善阅读体验。与之相对的，大写字母和数字的高度与汉字类似，区别只在于影响较小的灰度和宽度。
综上，中西文混排时，可以试着采用如下规则添加间隙：
1. 如果拉丁字母有配合汉字的设计（如在原有基础上微调了字号），则空隙的必要性降低；如果拉丁字母来自普通的拉丁字体，或没有特意适应汉字，则更应该添加空隙。同时，不论空隙添加与否，都应该尽量选择字重匹配的汉字和拉丁字体。
2. 较短或大写字母为主的字符串可以考虑不添加空隙，因为这样的字符串与作为主体的汉字比较类似。或追求风格统一，即尽可能全部添加空隙或全部不添加。
比如，如果缩写和普通单词、词组数量大致相当，或后者多于前者，则应该全部添加空隙。但也存在变通的可能性：举例来说，如果前者占绝大多数，可以只为后者添加空隙。拉丁字母或数字多于中文的情况下，则应该当作西文文本处理，全部添加普通空格。
3. 比起大写字母，小写字母或包含空格的字符串更需要空隙；拉丁字母字符串越长，空隙越有必要。大写数字，尤其是等宽数字，无需间隙。
4. 既然添加空隙的目的不是为了适应西文排版规则，那么作为空隙的字符就不一定是U+0020，而可以使用更加美观的U+2006、U+2009或U+200A。需要注意的是，不论使用什么字符，都不是理想的解决方案；这个问题应该由排版引擎本身处理，如 InDesign 和苹果操作系统的一些应用就可以自动在中西文之间插入空隙，CSS的 text-autospace 属性应该也能实现类似的效果，只是目前还未被主流浏览器支持。同时，在不引起歧义的情况下，也应尽量将西文术语替换成既有的中文译名，避免混排的情况，从根本上消灭问题。</description>
    </item>
    
    <item>
      <title>&lt;span class=hzitalic&gt;hz&lt;/span&gt;-program 简析（施工中）</title>
      <link>http://hugo.mergo.online/posts/hz/</link>
      <pubDate>Mon, 05 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>http://hugo.mergo.online/posts/hz/</guid>
      <description>众所周知，InDesign 可以拉伸或压缩字符的宽度，作为两边对齐的手段之一。这种做法理论上可以减少断字，并使词距更加均衡。古腾堡的42行圣经也采用类似的做法，
从图1可以看出，InDesign 使用的算法会使字符变形。此处使用了较夸张的缩放设置（75% – 100% – 150%）。使用可变字体能避免这个问题，但此技术尚未成为主流，大部分经典正文字体也没有可变版本。在 Zapf 自己提供的样本中，字符宽度的缩放也已经清晰可辨（留心观察第1段第2行和第2段第1行）。
但仅凭这些论据就能否定 hz-program 和字符拉伸的实用价值吗？</description>
    </item>
    
    <item>
      <title>大写、小写与小型大写</title>
      <link>http://hugo.mergo.online/posts/capitalisation/</link>
      <pubDate>Sat, 19 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>http://hugo.mergo.online/posts/capitalisation/</guid>
      <description>有这么一条规定说，长于两个字母的缩写词不应使用普通的大写字母，而应该用小型大写字母，即 small capitals（下文简称SC）。比如，USA、NATO，等等。这样做的目的是「避免大写字母打扰文字流」，可以排出利于阅读、灰度均匀的文段。老派的研究者对此坚信不疑，《经济学人》也采用这种做法。
这个理由看似合理，毕竟 SC 乍一看的确更加接近小写字母。但从结构上考虑，SC 其实缺少升降部，字怀较普通小写字母更大，且一般需要额外添加字距。并非所有字体的 SC 都能与小写字母因此，SC 可说是小写字母为主的文本流中突然出现的大片空白，并不利于阅读。不妨将其类比成中文文本中出现的英文——就算从页面的整体灰度这一方面来讲，两者之间的差异也过于显著和突兀了。
更何况，比起普通大写字母，SC 还有另一个劣势：现代人已经习惯文本中的大写字母。德语中的大写字母远远多于英语，但后者在阅读速度上并没有明显优势。理科论文中经常出现大量缩写，但如果说专业人士会被其干扰从而影响阅读，那就太好笑了。正相反，大多数阅读者反而会对极少出现的 SC 感到陌生，而「提升阅读体验」也不能算是使用 SC 的合理借口。
复杂的大写规则如今很常见，但在古代可说是不存在的。如果要尽量避免大写字母，那应该如何处理 OpenType 等采用 PascalCase 的专有名词？mRNA 呢？LaTeX 呢？形如「UFOs」的复数形式呢？全部小写？还是全部使用 SC？除了保留原本的大小写之外，没有合理的方案。
从技术方面，强行使用 SC 也不可行。许多字体没有涵盖 SC 字符，或采用将其打包成独立文件的形式，而某些排版引擎至今还未支持 OpenType 的 smcp 特性。这种情况下只能采用机械缩放的方法，效果不忍直视。目前来看，SC 作为相当基础的特性，普及程度仍然非常糟糕。
有一种折中的做法，即排版缩写时使用略小字号的大写字母。但缩小字号会导致笔画变细，不同字号的大写字母如果并列，也显得不协调。再说，作为大写字母的本质没有改变，问题并未解决。「If it ain’t broke, don’t fix it」，使用 SC 与否本来就不是原则性的问题，而大家也都已经习惯于普通又简单的大写字母，那干脆还是安于现状得了。</description>
    </item>
    
  </channel>
</rss>
